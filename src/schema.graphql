type Query {
    users(query: String): [User!]!
    posts(query: String): [Post!]!
    user(id: String): User!
    comments: [Comment!]!
}

type Mutation {
    createUser(user: CreateUserInput): User!
    deleteUser(id: ID!): User!
    updateUser(id: ID!, updateUserInput: UpdateUserInput): User!
    createPost(post: CreatePostInput): Post!
    deletePost(id: ID!): Post!
    updatePost(id: ID!, updatePostInput: UpdatePostInput): Post!
    createComment(comment: CreateCommentInput): Comment!
    deleteComment(id: ID!): Comment! 
    updateComment(id: ID!, updateCommentInput: UpdateCommentInput): Comment!
}

type Subscription {
    count: Int!
    comment(postId: ID!): Comment!
}

input UpdateUserInput {
    name: String
    email: String
    age: String,
}

input UpdatePostInput {
    title: String,
    body: String,
    author: ID,
    published: Boolean,
}

input UpdateCommentInput {
    text: String,
    author: ID,
    post: ID,
}


input CreateUserInput {
    name: String!
    email: String!
}

input CreatePostInput {
    title: String!
    body: String!
    author: ID!
    published: Boolean!
}

input CreateCommentInput {
    text: String!
    author: ID!
    post: ID!
}

type User {
    id: ID!
    name: String!
    email: String!
    age: String!
    posts: [Post!]!
    comments: [Comment]!
}

type Post {
    id: ID!
    title: String!
    body: String!
    author: User!
    published: Boolean!
}
type Comment {
    id: ID!
    text: String!
    author: User!
    post: Post!
}
